C
C
      MODULE GWM1BAS2SUBS
C     VERSION: 09AUG2007
      IMPLICIT NONE
      PRIVATE
      PUBLIC::GWM1BAS2AR,GWM1BAS2RW,GWM1BAS2RRF,GWM1BAS2DABAS7
C
      INTEGER, PARAMETER :: I4B = SELECTED_INT_KIND(9)
      INTEGER, PARAMETER :: I2B = SELECTED_INT_KIND(4)
      INTEGER, PARAMETER :: SP = KIND(1.0)
      INTEGER, PARAMETER :: DP = KIND(1.0D0)
      INTEGER, PARAMETER :: LGT = KIND(.TRUE.)
C
C-----FOR ERROR HANDLING
      CHARACTER(LEN=200)::FLNM 
      CHARACTER(LEN=20)::FILACT,FMTARG,ACCARG,FILSTAT
      INTEGER(I4B)::NDUM
      REAL(SP)::RDUM
C
      CONTAINS
C***********************************************************************
      SUBROUTINE GWM1BAS2AR(IN,IOUT,NROW,NCOL,NLAY,NPER,
     1                      PERLEN,HCLOSE,VERSION,MFVNAM)
C***********************************************************************
C     VERSION: 07AUG2007
C     PURPOSE: READ AND PREPARE ALL INFORMATION FOR GWM
C-----------------------------------------------------------------------
      USE GWM1BAS2, ONLY : GWMOUT,SMALLEPS
      USE GWM1DCV2, ONLY : NFVAR,NEVAR,NBVAR,GWM1DCV2AR
      USE GWM1OBJ2, ONLY : GWM1OBJ2AR
      USE GWM1RMS2, ONLY : NRMC,NCON,NV,NDV,HCLOSEG,IREF
      USE GWM1RMS2SUBS, ONLY : GWM1RMS2AR
      USE GWM1DCC2, ONLY : GWM1DCC2AR
      USE GWM1STC2, ONLY : GWM1STC2AR
      USE GWM1HDC2, ONLY : GWM1HDC2AR
      USE GWM1SMC2, ONLY : GWM1SMC2AR
      INTEGER(I4B),INTENT(IN)::IN,IOUT,NROW,NCOL,NLAY,NPER
      REAL(SP),INTENT(IN)::PERLEN(:)
      REAL(SP),INTENT(IN)::HCLOSE
      CHARACTER(LEN=40),INTENT(IN)::VERSION
      CHARACTER(LEN=10),INTENT(IN)::MFVNAM
     
      INTERFACE  
        SUBROUTINE USTOP(STOPMESS)
        CHARACTER STOPMESS*(*)
        END
C
        SUBROUTINE URDCOM(IN,IOUT,LINE)
        CHARACTER*(*) LINE
        END
C
        SUBROUTINE URWORD(LINE,ICOL,ISTART,ISTOP,NCODE,N,R,IOUT,IN)
        CHARACTER*(*) LINE
        CHARACTER*20 STRING
        CHARACTER*30 RW
        CHARACTER*1 TAB
        END
C 
        INTEGER FUNCTION IGETUNIT(IFIRST,MAXUNIT)
        INTEGER I,IFIRST,IOST,MAXUNIT
        LOGICAL LOP
        END        
C        
      END INTERFACE
C-----LOCAL VARIABLES
      INTEGER(I4B)::LLOC,IKEYS,IKEYF,INAMES,INAMEF,I
      CHARACTER(LEN=200)::FNAME,LINE
      CHARACTER(LEN=10)::KEYWORD
      INTEGER(I4B)::LENVER,INDENT
      INTEGER(I4B)::NUNOPN=99
C+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
C
C-----DEFINE THE INTERNAL HCLOSE VALUE
      IF(HCLOSE.NE.0.0)THEN
        HCLOSEG = REAL(HCLOSE,DP)
      ELSE
        HCLOSEG = SMALLEPS
      ENDIF
C
C-----FIND A UNIT NUMBER FOR THE GWM OUTPUT FILE
      GWMOUT=IGETUNIT(7,95)
C-----LOOK FOR A FILE NAME FOR THE GWM OUTPUT FILE 
      OPEN(UNIT=NUNOPN,STATUS='SCRATCH')         ! OPEN TEMP FILE 
      CALL URDCOM(IN,NUNOPN,LINE) 
      LLOC=1
      CALL URWORD(LINE,LLOC,IKEYS,IKEYF,1,NDUM,RDUM,GWMOUT,IN)
      CALL URWORD(LINE,LLOC,INAMES,INAMEF,0,NDUM,RDUM,GWMOUT,IN)
      IF(LINE(IKEYS:IKEYF).EQ.'OUT')THEN
        FNAME=LINE(INAMES:INAMEF)
      ELSE
        FNAME='GWM.OUT'                          ! USE DEFAULT NAME
        BACKSPACE(IN)                            ! NEED TO RE-READ LINE
      ENDIF
C-----OPEN GWM OUTPUT FILE
      OPEN(UNIT=GWMOUT,FILE=FNAME,STATUS='UNKNOWN',ACTION='READWRITE')
C
C-----WRITE HEADER
      WRITE(GWMOUT,1000)MFVNAM,VERSION
      WRITE(GWMOUT,1010)IN
C
C-----WRITE ANY COMMENTS THAT WERE PRESENT BEFORE FIRST COMMAND LINE
      REWIND(NUNOPN)
   10 READ(NUNOPN,'(1X,A)',END=20)LINE
      WRITE(GWMOUT,'(1X,A)')LINE
      GO TO 10
   20 CLOSE(NUNOPN)                              ! CLOSE/ERASE TEMP FILE
C
C-----READ DECISION VARIABLE FILE NAME AND CALL AR ROUTINE 
      CALL URDCOM(IN,GWMOUT,LINE)
      LLOC=1
      CALL URWORD(LINE,LLOC,IKEYS,IKEYF,1,NDUM,RDUM,GWMOUT,IN)
      CALL URWORD(LINE,LLOC,INAMES,INAMEF,0,NDUM,RDUM,GWMOUT,IN)
      IF(LINE(IKEYS:IKEYF).EQ.'DECVAR')THEN
        FNAME=LINE(INAMES:INAMEF)
        CALL GWM1DCV2AR(FNAME,GWMOUT,NROW,NCOL,NLAY,NPER,
     &                  NFVAR,NEVAR,NBVAR,NDV)
      ELSE
        WRITE(GWMOUT,1030,ERR=990)
        CALL USTOP(' ')
      ENDIF
C
C-----READ OBJECTIVE FUNCTION FILE NAME AND CALL AR ROUTINE 
      CALL URDCOM(IN,GWMOUT,LINE)
      LLOC=1
      CALL URWORD(LINE,LLOC,IKEYS,IKEYF,1,NDUM,RDUM,GWMOUT,IN)
      CALL URWORD(LINE,LLOC,INAMES,INAMEF,0,NDUM,RDUM,GWMOUT,IN)
      IF(LINE(IKEYS:IKEYF).EQ.'OBJFNC')THEN
        FNAME=LINE(INAMES:INAMEF)
        CALL GWM1OBJ2AR(FNAME,GWMOUT,NPER,REAL(PERLEN,DP),NFVAR,NEVAR,
     &                  NBVAR)
      ELSE
        WRITE(GWMOUT,1040,ERR=990)
        CALL USTOP(' ')
      ENDIF
C
C-----INITIALIZE THE NUMBER OF VARIABLES CONSTRAINTS
      NV = NDV - 1
      NCON = 0
      NRMC = 0
C
C-----READ DECISION-VARIABLE CONSTRAINT FILE NAME AND CALL AR ROUTINE
      CALL URDCOM(IN,GWMOUT,LINE)
      LLOC=1
      CALL URWORD(LINE,LLOC,IKEYS,IKEYF,1,NDUM,RDUM,GWMOUT,IN)
      CALL URWORD(LINE,LLOC,INAMES,INAMEF,0,NDUM,RDUM,GWMOUT,IN)
      IF(LINE(IKEYS:IKEYF).EQ.'VARCON')THEN
        FNAME=LINE(INAMES:INAMEF)
        CALL GWM1DCC2AR(FNAME,GWMOUT,NFVAR,NEVAR,NBVAR,NV,NCON)
      ELSE
        WRITE(GWMOUT,2000,ERR=990)
        CALL USTOP(' ')
      ENDIF
C
C-----READ REMAINING CONSTRAINT FILES AND SOLUTION FILE
      IREF=0                                     ! INITIALIZE REFERENCE FLAG
  100 CONTINUE
        READ(IN,'(A)',END=900)LINE
        LLOC=1
        CALL URWORD(LINE,LLOC,IKEYS,IKEYF,1,NDUM,RDUM,GWMOUT,IN)
        CALL URWORD(LINE,LLOC,INAMES,INAMEF,0,NDUM,RDUM,GWMOUT,IN)
        KEYWORD = LINE(IKEYS:IKEYF)
        FNAME=LINE(INAMES:INAMEF)
C
C-------PROCESS KEYWORD AND ACCESS APPROPRIATE INPUT FILE
        IF(LINE(1:1).EQ.'#')THEN                 ! LINE HAS BEEN COMMENTED
          WRITE(GWMOUT,'(1X,A)')LINE
        ELSEIF(KEYWORD.EQ.'SUMCON')THEN
          CALL GWM1SMC2AR(FNAME,GWMOUT,NFVAR,NEVAR,NBVAR,NV,NCON)
        ELSEIF(KEYWORD.EQ.'HEDCON')THEN
          CALL GWM1HDC2AR(FNAME,GWMOUT,NPER,NROW,NCOL,NLAY,NV,NCON,NRMC)
        ELSEIF(KEYWORD.EQ.'STRMCON')THEN
          CALL GWM1STC2AR(FNAME,GWMOUT,NPER,NV,NCON,NRMC)
        ELSEIF(KEYWORD.EQ.'SOLN')THEN
          CALL GWM1RMS2AR(FNAME,GWMOUT,NFVAR,NEVAR,NBVAR,NDV,NV,NCON)
          RETURN                                 ! SOLUTION FILE IS LAST INPUT
        ELSE
          WRITE(GWMOUT,3000,ERR=990)KEYWORD
          CALL USTOP(' ')
        ENDIF
      GOTO 100                                   ! READ NEXT KEYWORD
C
C-----DONE READING IN INPUT DATA
  900 WRITE(GWMOUT,4000,ERR=990)
      CALL USTOP(' ')
C
 1000 FORMAT (/,34X,'MODFLOW',A,/,
     &4X,'U.S. GEOLOGICAL SURVEY MODULAR FINITE-DIFFERENCE',
     &' GROUND-WATER FLOW MODEL',/,29X,'Version ',A/)
 1010 FORMAT(/,/,1X,/1X,'OPENING GWM FILE FOR GWM1 -- GROUND-WATER ',
     1  'MANAGEMENT PROCESS',/,' INPUT READ FROM UNIT',I4,/)
 1030 FORMAT(1X,/1X,'PROGRAM STOPPED. USER MUST SPECIFY A',
     1  ' DECISION VARIABLE FILE')
 1040 FORMAT(1X,/1X,'PROGRAM STOPPED. USER MUST SPECIFY AN',
     1  ' OBJECTIVE FUNCTION FILE')
 2000 FORMAT(1X,/1X,'PROGRAM STOPPED. USER MUST SPECIFY A',
     1  ' DECISION-VARIABLES CONSTRAINT FILE')
 3000 FORMAT(1X,/1X,'PROGRAM STOPPED. ',A10,' NOT A VALID CONSTRAINT',
     1  /,' OR SOLUTION KEYWORD')
 4000 FORMAT(1X,/1X,'PROGRAM STOPPED. USER MUST SPECIFY A',
     1  ' SOLUTION FILE AS THE LAST FILE IN THE GWM FILE')
C
      RETURN
C
C-----ERROR HANDLING
  990 CONTINUE
C-----FILE-WRITING ERROR
      INQUIRE(GWMOUT,NAME=FLNM,FORM=FMTARG,ACCESS=ACCARG,ACTION=FILACT)
      WRITE(*,9900)TRIM(FLNM),IOUT,FMTARG,ACCARG,FILACT
 9900 FORMAT(/,1X,'*** ERROR WRITING FILE "',A,'" ON UNIT ',I5,/,
     &7X,'SPECIFIED FILE FORMAT: ',A,/
     &7X,'SPECIFIED FILE ACCESS: ',A,/
     &7X,'SPECIFIED FILE ACTION: ',A,/
     &2X,'-- STOP EXECUTION (GWM1BAS2AR)')
      CALL USTOP(' ')
C
  991 CONTINUE
C-----FILE-READING ERROR
      INQUIRE(IN,NAME=FLNM,FORM=FMTARG,ACCESS=ACCARG,ACTION=FILACT)
      WRITE(*,9910)TRIM(FLNM),IN,FMTARG,ACCARG,FILACT
      WRITE(IOUT,9910)TRIM(FLNM),IN,FMTARG,ACCARG,FILACT
 9910 FORMAT(/,1X,'*** ERROR READING FILE "',A,'" ON UNIT ',I5,/,
     &7X,'SPECIFIED FILE FORMAT: ',A,/
     &7X,'SPECIFIED FILE ACCESS: ',A,/
     &7X,'SPECIFIED FILE ACTION: ',A,/
     &2X,'-- STOP EXECUTION (GWM1BAS2AR)')
      CALL USTOP(' ')
C
      END SUBROUTINE GWM1BAS2AR
C
C***********************************************************************
      SUBROUTINE GWM1BAS2RW(INUNIT,FNAME,CUNIT,NIUNIT,IOUT,VERSION,
     &                      MFVNAM)
C***********************************************************************
C     
C-----GWM1BAS2RW CREATED FROM PES1BAS6RW VERSION 19990811ERB 
C     ******************************************************************
C     VERSION: 07AUG2007 
C     PURPOSE: REWIND FILES.
C     ******************************************************************
C
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
      INTEGER(I4B),INTENT(INOUT)::INUNIT
      CHARACTER(LEN=*),INTENT(IN)::FNAME
      INTEGER(I4B),INTENT(IN)::NIUNIT,IOUT
      CHARACTER(LEN=4),INTENT(IN)::CUNIT(NIUNIT)
      CHARACTER(LEN=40),INTENT(IN)::VERSION
      CHARACTER(LEN=10),INTENT(IN)::MFVNAM
      INTERFACE
C
        SUBROUTINE URWORD(LINE,ICOL,ISTART,ISTOP,NCODE,N,R,IOUT,IN)
        CHARACTER*(*) LINE
        CHARACTER*20 STRING
        CHARACTER*30 RW
        CHARACTER*1 TAB
        END
C
        SUBROUTINE USTOP(STOPMESS)
        CHARACTER STOPMESS*(*)
        END
      END INTERFACE
      CHARACTER(len=40)::SPACES
      CHARACTER(len=200)::LINE
      LOGICAL(LGT)::LOP
      INTEGER(I4B)::LLOC,ITYP1,ITYP2,ISTART,ISTOP,INAM1,INAM2,I 
      INTEGER(I4B)::LENVER,INDENT,IU 
      INCLUDE 'openspec.inc'
C     ------------------------------------------------------------------
C
C1------OPEN THE NAME FILE.
      FILSTAT='OLD'
      OPEN(UNIT=INUNIT,FILE=FNAME,STATUS=FILSTAT,ACTION=ACTION(1),
     &     ERR=999)
C
C2------READ A LINE; IGNORE BLANK LINES AND COMMENT LINES.
   10 READ(INUNIT,'(A)',END=100) LINE
      IF(LINE.EQ.' ')GOTO 10
      IF(LINE(1:1).EQ.'#')GOTO 10
C
C3------DECODE THE FILE TYPE, UNIT NUMBER, AND NAME.
      LLOC=1
      CALL URWORD(LINE,LLOC,ITYP1,ITYP2,1,NDUM,RDUM,IOUT,INUNIT)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IU,RDUM,IOUT,INUNIT)
      CALL URWORD(LINE,LLOC,INAM1,INAM2,0,NDUM,RDUM,IOUT,INUNIT)
C
C4------REWIND IF MAJOR OPTION FILE (EVEN IF NOT RE-READ)
      DO 20 I=1,NIUNIT
        IF(LINE(ITYP1:ITYP2).EQ.CUNIT(I))GOTO 30
   20 ENDDO
C
C5------REWIND IF BAS OR NONGLOBAL LIST FILE
      IF(LINE(ITYP1:ITYP2).EQ.'BAS6')GOTO 30
      IF(LINE(ITYP1:ITYP2).EQ.'LIST')GOTO 30
C
C5------NOT A MAJOR OPTION.  REWIND IF FILE TYPE IS DATA.
      IF(LINE(ITYP1:ITYP2).NE.'DATA'         .AND.
     1   LINE(ITYP1:ITYP2).NE.'DATA(BINARY)' )GOTO 10
C
C6------REWIND THE FILE
   30 REWIND(IU)
C
      IF(LINE(ITYP1:ITYP2).EQ.'LIST')THEN        ! WRITE NEW HEADER
        SPACES=' '
        LENVER=LEN_TRIM(VERSION)
        INDENT=40-(LENVER+8)/2
        WRITE(IOUT,1000) MFVNAM,SPACES(1:INDENT),VERSION(1:LENVER) 
      ELSE
        WRITE(IOUT,3000)LINE(INAM1:INAM2),LINE(ITYP1:ITYP2),IU
      ENDIF
      GOTO 10
C
C7------END OF NAME FILE.
  100 CONTINUE
      INQUIRE(UNIT=INUNIT,OPENED=LOP)
      IF(LOP)CLOSE(UNIT=INUNIT)
C
      RETURN
 1000   FORMAT(34X,'MODFLOW',A,/,
     &       6X,'U.S. GEOLOGICAL SURVEY MODULAR',
     &       ' FINITE-DIFFERENCE GROUND-WATER FLOW MODEL',/,
     &       A,'VERSION ',A,/)
 3000 FORMAT(1X,/1X,'REWOUND ',A,/
     1       1X,'FILE TYPE:',A,'   UNIT ',I4)
C
C-----ERROR HANDLING
  999 CONTINUE
C-----FILE-OPENING ERROR
      INQUIRE(INUNIT,NAME=FLNM,FORM=FMTARG,ACCESS=ACCARG,ACTION=FILACT)
      WRITE(*,9990)TRIM(FLNM),INUNIT,FILSTAT,FMTARG,ACCARG,FILACT
      WRITE(IOUT,9990)TRIM(FLNM),INUNIT,FILSTAT,FMTARG,ACCARG,FILACT
 9990 FORMAT(/,1X,'*** ERROR OPENING FILE "',A,'" ON UNIT ',I5,/,
     &7X,'SPECIFIED FILE STATUS: ',A,/
     &7X,'SPECIFIED FILE FORMAT: ',A,/
     &7X,'SPECIFIED FILE ACCESS: ',A,/
     &7X,'SPECIFIED FILE ACTION: ',A,/
     &2X,'-- STOP EXECUTION (GWM1BAS2RW)')
      CALL USTOP(' ')
C
      END SUBROUTINE GWM1BAS2RW
C
C***********************************************************************
      SUBROUTINE GWM1BAS2RRF(INUNIT,CUNIT,VERSION,IUDIS,IUZON,IUMLT,
     2       IGRID,IUOC,HEADNG,IUPVAL,MFVNAM,FNAMEN,LASTSIM)
C***********************************************************************
C     VERSION: 07AUG2007 CREATED FROM GWF2BAS7AR
C     PURPOSE: RE-READ INFORMATION FROM FLOW PROCESS BAS FILE
C-----------------------------------------------------------------------
C        SPECIFICATIONS:
C     ------------------------------------------------------------------
      USE GLOBAL,     ONLY:NCOL,NROW,NLAY,NPER,NBOTM,NCNFBD,ITMUNI,
     1                     LENUNI,IXSEC,ITRSS,INBAS,IFREFM,NODES,IOUT,
     2                     IUNIT,NIUNIT,HNEW,LBOTM,LAYCBD,LAYHDT,LAYHDS,
     3                     PERLEN,NSTP,TSMULT,ISSFLG,DELR,DELC,BOTM,
     4                     HOLD,IBOUND,CR,CC,CV,HCOF,RHS,BUFF,STRT
      USE PARAMMODULE,ONLY:MXPAR,MXCLST,MXINST,ICLSUM,IPSUM,
     1                     INAMLOC,NMLTAR,NZONAR,NPVAL,
     2                     B,IACTIVE,IPLOC,IPCLST,PARNAM,PARTYP,
     3                     ZONNAM,MLTNAM,INAME
      USE GWFBASMODULE,ONLY:MSUM,IHEDFM,IHEDUN,IDDNFM,IDDNUN,IBOUUN,
     1                      LBHDSV,LBDDSV,LBBOSV,IBUDFL,ICBCFL,IHDDFL,
     2                      IAUXSV,IBDOPT,IPRTIM,IPEROC,ITSOC,ICHFLG,
     3                      DELT,PERTIM,TOTIM,HNOFLO,CHEDFM,CDDNFM,
     4                      CBOUFM,VBVL,VBNM
      USE GWM1BAS2, ONLY : ZERO
C
      INTEGER(I4B),INTENT(IN)::INUNIT,IUDIS,IUZON,IUMLT,
     &                         IGRID,IUOC,IUPVAL                   
      CHARACTER(LEN=80),INTENT(INOUT)::HEADNG(*) 
      CHARACTER(LEN= 4),INTENT(IN)::CUNIT(NIUNIT)
      CHARACTER(LEN=40),INTENT(IN)::VERSION 
      CHARACTER(LEN=10),INTENT(IN)::MFVNAM 
      CHARACTER(LEN=200),INTENT(IN)::FNAMEN
      LOGICAL,INTENT(IN)::LASTSIM
C
      INTERFACE
        SUBROUTINE U2DINT(IA,ANAME,II,JJ,K,IN,IOUT)
        CHARACTER*24 ANAME
        DIMENSION IA(JJ,II)
        CHARACTER*20 FMTIN
        CHARACTER*200 CNTRL
        CHARACTER*200 FNAME
        END
C
        SUBROUTINE U2DREL(A,ANAME,II,JJ,K,IN,IOUT)
        CHARACTER*24 ANAME
        DIMENSION A(JJ,II)
        CHARACTER*20 FMTIN
        CHARACTER*200 CNTRL
        CHARACTER*16 TEXT
        CHARACTER*200 FNAME
        END
C
        SUBROUTINE USTOP(STOPMESS)
        CHARACTER STOPMESS*(*)
        END
      END INTERFACE
C-----LOCAL VARIABLES
      REAL(DP)::HNF
      INTEGER(I4B)::I,J,K,KK,N,LLOC,ISTART,ISTOP,R
      CHARACTER(LEN=200) LINE
      CHARACTER(LEN=24)::ANAME(2)=(/'          BOUNDARY ARRAY',
     &                             '            INITIAL HEAD'/)
C     ------------------------------------------------------------------
C1------VARIABLES REMAIN ALLOCATED FROM GWF2BAS7AR
C
C2------CHECK THAT ALL FILES ARE STILL OPEN - OPEN IF NOT
      CALL GWM1BAS2OPEN(INUNIT,IOUT,IUNIT,CUNIT,
     1              NIUNIT,INBAS,FNAMEN)
C
C3------PRINT A MESSAGE IDENTIFYING THE BASIC PACKAGE.
      WRITE(IOUT,1)INBAS
    1 FORMAT(1X,/1X,'BAS -- BASIC PACKAGE, VERSION 7, 5/2/2005',
     2' INPUT READ FROM UNIT ',I4)
C
C4------Initialize parameter definition variables.
      IPSUM=0
      ICLSUM=0
      INAMLOC=1
      DO 10 N=1,MXPAR
        PARNAM(N)=' '
        PARTYP(N)=' '
        IPLOC(1,N)=0
        IPLOC(2,N)=0
        IACTIVE(N)=0
   10 CONTINUE
C
C5------Allocate and read discretization data.
      CALL SGWF2BAS7ARDIS(IUDIS,IOUT)
      NODES=NCOL*NROW*NLAY
C      
C6------GLOBAL ARRAYS REMAIN ALLOCATED
C
C7------Initialize head-dependent thickness indicator to code that
C7------indicates layer is undefined.
      DO 100 I=1,NLAY
        LAYHDT(I)=-1
        LAYHDS(I)=-1
  100 CONTINUE
      WRITE(IOUT,'(//)')
C
C8------Read BAS Package file.
C8A-----READ AND PRINT COMMENTS.  SAVE THE FIRST TWO COMMENTS IN HEADNG.
      HEADNG(1)=' '
      HEADNG(2)=' '
      WRITE(IOUT,*)
      READ(INBAS,'(A)') LINE
      IF(LINE(1:1).NE.'#') GO TO 20
      HEADNG(1)=LINE(1:80)
      WRITE(IOUT,'(1X,A)') HEADNG(1)
      READ(INBAS,'(A)') LINE
      IF(LINE(1:1).NE.'#') GO TO 20
      HEADNG(2)=LINE(1:80)
      WRITE(IOUT,'(1X,A)') HEADNG(2)
      CALL URDCOM(INBAS,IOUT,LINE)
C
C8B-----LOOK FOR OPTIONS IN THE FIRST ITEM AFTER THE HEADING.
   20 IXSEC=0
      ICHFLG=0
      IFREFM=0
      IPRTIM=0
      LLOC=1
   25 CALL URWORD(LINE,LLOC,ISTART,ISTOP,1,N,R,IOUT,INBAS)
      IF(LINE(ISTART:ISTOP).EQ.'XSECTION') THEN
         IXSEC=1
      ELSE IF(LINE(ISTART:ISTOP).EQ.'CHTOCH') THEN
         ICHFLG=1
      ELSE IF(LINE(ISTART:ISTOP).EQ.'FREE') THEN
         IFREFM=1
         WRITE(IOUT,26)
   26    FORMAT (1X,'THE FREE FORMAT OPTION HAS BEEN SELECTED')
      ELSEIF(LINE(ISTART:ISTOP).EQ.'PRINTTIME') THEN
         IPRTIM=1
         WRITE(IOUT,7)
    7    FORMAT(1X,'THE PRINTTIME OPTION HAS BEEN SELECTED')
      END IF
      IF(LLOC.LT.200) GO TO 25
C
C8C-----PRINT A MESSAGE SHOWING OPTIONS.
      IF(IXSEC.NE.0) WRITE(IOUT,61)
   61 FORMAT(1X,'CROSS SECTION OPTION IS SPECIFIED')
      IF(ICHFLG.NE.0) WRITE(IOUT,62)
   62 FORMAT(1X,'CALCULATE FLOW BETWEEN ADJACENT CONSTANT-HEAD CELLS')
C
C8D-----INITIALIZE TOTAL ELAPSED TIME COUNTER STORAGE ARRAY COUNTER
C8D-----AND CALCULATE NUMBER OF CELLS.
      TOTIM=0.
C      
C8E-----READ BOUNDARY ARRAY(IBOUND).
      IF(IXSEC.EQ.0) THEN
        DO 280 K=1,NLAY
          KK=K
          CALL U2DINT(IBOUND(:,:,KK),ANAME(1),NROW,NCOL,KK,INBAS,IOUT)
  280   CONTINUE
      ELSE
        CALL U2DINT(IBOUND(:,:,1),ANAME(1),NLAY,NCOL,-1,INBAS,IOUT)
      END IF
C
C8F-----READ AND PRINT HEAD VALUE TO BE PRINTED FOR NO-FLOW CELLS.
      IF(IFREFM.EQ.0) THEN
        READ(INBAS,'(F10.0)') HNOFLO
      ELSE
        READ(INBAS,*) HNOFLO
      END IF
      HNF=HNOFLO
      WRITE(IOUT,1000) HNOFLO
C
      IF(ITRSS.EQ.0 .AND. .NOT.LASTSIM)THEN      ! STEADY STATE SIMULATION
C8G-----DON'T READ STRT - USE HNEW DIRECTLY AS INITIAL SOLUTION ESTIMATE
C9------DON'T RESET HNEW
        WRITE(IOUT,2000,ERR=990) 
C
      ELSE                                       ! NON-STEADY STATE SIMULATION
C-------FOR NON-STEADY FLOW PROCESS READ AND INITIALIZE BASIC MODEL ARRAYS
C
C8G-----READ INITIAL HEADS.
        IF(IXSEC.EQ.0) THEN
           DO 300 K=1,NLAY
             KK=K
             CALL U2DREL(STRT(:,:,KK),ANAME(2),NROW,NCOL,KK,INBAS,IOUT)
  300      CONTINUE
        ELSE
          CALL U2DREL(STRT(:,:,1),ANAME(2),NLAY,NCOL,-1,INBAS,IOUT)
        END IF
C
C9------COPY INITIAL HEADS FROM STRT TO HNEW.
        DO 400 K=1,NLAY
        DO 400 I=1,NROW
        DO 400 J=1,NCOL
          HNEW(J,I,K)=STRT(J,I,K)
          IF(IBOUND(J,I,K).EQ.0) HNEW(J,I,K)=HNF
  400   CONTINUE
      ENDIF  
C
C10-----SET UP OUTPUT CONTROL.
      CALL SGWF2BAS7I(NLAY,IUNIT(IUOC),IOUT,IFREFM,NIUNIT)
C
C11-----INITIALIZE VOLUMETRIC BUDGET ACCUMULATORS TO ZERO.
      DO 600 I=1,NIUNIT
      DO 600 J=1,4
      VBVL(J,I)=ZERO
  600 CONTINUE
C
C12-----Allocate and read Zone and Multiplier arrays
      CALL SGWF2BAS7ARMZ(IUNIT(IUZON),IUNIT(IUMLT))
C
C13-----READ PARAMETER VALUES FILE.
      CALL SGWF2BAS7ARPVAL(IUPVAL)
C
C14-----SAVE POINTERS TO DATA AND RETURN.
      CALL SGWF2BAS7PSV(IGRID)
      RETURN
 1000   FORMAT(1X,/1X,'AQUIFER HEAD WILL BE SET TO ',1PG11.5,
     1         ' AT ALL NO-FLOW NODES (IBOUND=0).')
 2000   FORMAT(1X,/1X,'INITIAL HEAD WILL BE SET TO ',
     1         'THE SOLUTION FROM THE PRIOR FLOW-PROCESS SIMULATION')
C-----ERROR HANDLING
  990 CONTINUE
C-----FILE-WRITING ERROR
      INQUIRE(IOUT,NAME=FLNM,FORM=FMTARG,ACCESS=ACCARG,ACTION=FILACT)
      WRITE(*,9900)TRIM(FLNM),IOUT,FMTARG,ACCARG,FILACT
 9900 FORMAT(/,1X,'*** ERROR WRITING FILE "',A,'" ON UNIT ',I5,/,
     &7X,'SPECIFIED FILE FORMAT: ',A,/
     &7X,'SPECIFIED FILE ACCESS: ',A,/
     &7X,'SPECIFIED FILE ACTION: ',A,/
     &2X,'-- STOP EXECUTION (GWM1BAS2RRF)')
      CALL USTOP(' ')
C
  991 CONTINUE
C-----FILE-READING ERROR
      INQUIRE(INBAS,NAME=FLNM,FORM=FMTARG,ACCESS=ACCARG,ACTION=FILACT)
      WRITE(*,9910)TRIM(FLNM),INBAS,FMTARG,ACCARG,FILACT
      WRITE(IOUT,9910)TRIM(FLNM),INBAS,FMTARG,ACCARG,FILACT
 9910 FORMAT(/,1X,'*** ERROR READING FILE "',A,'" ON UNIT ',I5,/,
     &7X,'SPECIFIED FILE FORMAT: ',A,/
     &7X,'SPECIFIED FILE ACCESS: ',A,/
     &7X,'SPECIFIED FILE ACTION: ',A,/
     &2X,'-- STOP EXECUTION (GWM1BAS2RRF)')
      CALL USTOP(' ')
C
      END SUBROUTINE GWM1BAS2RRF
C
C***********************************************************************
      SUBROUTINE GWM1BAS2DABAS7(IGRID)
C***********************************************************************
C     VERSION: 07AUG2007 CREATED FROM GWF2BAS7DA
C     PURPOSE: DEALLOCATE SELECTED GLOBAL DATA
C-----------------------------------------------------------------------
      USE GLOBAL
      USE PARAMMODULE
      USE GWFBASMODULE
      INTEGER(I4B),INTENT(IN)::IGRID
C      
C-------ITEMS THAT WILL BE REALLOCATED IN SGWF2BAS7ARDIS
        DEALLOCATE(GLOBALDAT(IGRID)%DELR)
        DEALLOCATE(GLOBALDAT(IGRID)%DELC)
        DEALLOCATE(GLOBALDAT(IGRID)%BOTM)
        DEALLOCATE(GLOBALDAT(IGRID)%LAYCBD)
        DEALLOCATE(GLOBALDAT(IGRID)%LBOTM)
        DEALLOCATE(GLOBALDAT(IGRID)%PERLEN)
        DEALLOCATE(GLOBALDAT(IGRID)%NSTP)
        DEALLOCATE(GLOBALDAT(IGRID)%TSMULT)
        DEALLOCATE(GLOBALDAT(IGRID)%ISSFLG)
C-------ITEMS THAT WILL BE REALLOCATED IN SGWF2BAS7ARMZ
        DEALLOCATE (PARAMDAT(IGRID)%ZONNAM)
        DEALLOCATE (PARAMDAT(IGRID)%IZON)
C-------ITEMS THAT WILL BE REALLOCATED IN SGWF2BAS7I
        DEALLOCATE(GWFBASDAT(IGRID)%IOFLG)
        DEALLOCATE(GWFBASDAT(IGRID)%VBVL)
        DEALLOCATE(GWFBASDAT(IGRID)%VBNM)
C
      RETURN
      END SUBROUTINE GWM1BAS2DABAS7
C
C***********************************************************************
      SUBROUTINE GWM1BAS2OPEN(INUNIT,IOUT,IUNIT,CUNIT,
     1              NIUNIT,INBAS,FNAMEN)
C***********************************************************************
C     VERSION: 09AUG2007 CREATED FROM SGWF2BAS7OPEN
C     PURPOSE: OPEN ANY FILES THAT MAY HAVE BEEN CLOSED
C-----------------------------------------------------------------------
C     SPECIFICATIONS:
C     ------------------------------------------------------------------
      INCLUDE 'openspec.inc'
      INTEGER(I4B),INTENT(IN)::INUNIT,NIUNIT,IOUT,INBAS
      INTEGER(I4B),INTENT(IN)::IUNIT(NIUNIT)
      CHARACTER*4, INTENT(IN)::CUNIT(NIUNIT)
      CHARACTER*200,INTENT(IN)::FNAMEN
C     LOCAL VARIABLES
      CHARACTER*7 FILSTAT
      CHARACTER*20 FILACT, FMTARG, ACCARG
      CHARACTER*300 LINE, FNAME 
      CHARACTER*20 FILTYP
      LOGICAL LOP
      INTEGER(I4B)::I,ISTOP,ISTART,LLOC,ITYP1,ITYP2
      INTEGER(I4B)::N,IU,INAM1,INAM2,IOPT1,IOPT2,IFLEN
      REAL(DP)::R
C     ---------------------------------------------------------------
C
C1------RE-OPEN NAME FILE.
      OPEN (UNIT=INUNIT,FILE=FNAMEN,STATUS='OLD',ACTION=ACTION(1))
C
C2------READ A LINE; IGNORE BLANK LINES AND PRINT COMMENT LINES.
10    READ(INUNIT,'(A)',END=1000) LINE
      IF(LINE.EQ.' ') GO TO 10
      IF(LINE(1:1).EQ.'#') GO TO 10
C
C3------DECODE THE FILE TYPE, UNIT NUMBER, AND NAME.
      LLOC=1
      CALL URWORD(LINE,LLOC,ITYP1,ITYP2,1,N,R,IOUT,INUNIT)
      FILTYP=LINE(ITYP1:ITYP2)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IU,R,IOUT,INUNIT)
      CALL URWORD(LINE,LLOC,INAM1,INAM2,0,N,R,IOUT,INUNIT)
      IFLEN=INAM2-INAM1+1
      FNAME(1:IFLEN)=LINE(INAM1:INAM2)
      INQUIRE(UNIT=IU,OPENED=LOP)
      IF(LOP) GO TO 10   ! ALREADY OPEN
C
C5------SET DEFAULT FILE ATTRIBUTES.
      FMTARG='FORMATTED'
      ACCARG='SEQUENTIAL'
      FILSTAT='UNKNOWN'
      FILACT=' '
C
C9------CHECK FOR "UNFORMATTED" FILE TYPE.
      IF(FILTYP.EQ.'DATA(BINARY)' .OR.
     1        FILTYP.EQ.'DATAGLO(BINARY)') THEN
         FMTARG=FORM
         ACCARG=ACCESS
C
C10-----CHECK FOR "FORMATTED" FILE TYPE.
      ELSE IF(LINE(ITYP1:ITYP2).EQ.'DATA' .OR.
     1        LINE(ITYP1:ITYP2).EQ.'DATAGLO') THEN
         FMTARG='FORMATTED'
         ACCARG='SEQUENTIAL'
C
C11-----CHECK FOR MAJOR OPTIONS.
      ELSE
        DO 20 I=1,NIUNIT
           IF(LINE(ITYP1:ITYP2).EQ.CUNIT(I)) THEN
              FILSTAT='OLD    '
              FILACT=ACTION(1)
              GO TO 30
           END IF
20      CONTINUE
30      CONTINUE
      END IF
C
C12-----FOR DATA FILES, CHECK FOR "REPLACE" OR "OLD" OPTION
      IF (FILSTAT.EQ.'UNKNOWN') THEN
        CALL URWORD(LINE,LLOC,IOPT1,IOPT2,1,N,R,IOUT,INUNIT)
        IF (LINE(IOPT1:IOPT2).EQ.'REPLACE' .OR.
     &      LINE(IOPT1:IOPT2).EQ.'OLD')
     &      FILSTAT = LINE(IOPT1:IOPT2)
      ENDIF
      IF (FILACT.EQ.' ') FILACT=ACTION(2)
C
C13-----OPEN THE FILE NAME 
      OPEN(UNIT=IU,FILE=FNAME(1:IFLEN),FORM=FMTARG,
     1      ACCESS=ACCARG,STATUS=FILSTAT,ACTION=FILACT,ERR=2000)
      GO TO 10
C
C14-----END OF NAME FILE.  
1000  CLOSE (UNIT=INUNIT)
C
      RETURN
C
C15-----ERROR OPENING FILE.
 2000 CONTINUE
      WRITE(*,2010)FNAME(1:IFLEN),IU,FILSTAT,FMTARG,ACCARG,FILACT
      WRITE(IOUT,2010)FNAME(1:IFLEN),IU,FILSTAT,FMTARG,ACCARG,FILACT
 2010 FORMAT(/,1X,'*** ERROR OPENING FILE "',A,'" ON UNIT ',I5,/,
     &7X,'SPECIFIED FILE STATUS: ',A,/
     &7X,'SPECIFIED FILE FORMAT: ',A,/
     &7X,'SPECIFIED FILE ACCESS: ',A,/
     &7X,'SPECIFIED FILE ACTION: ',A,/
     &2X,'-- STOP EXECUTION (SGWF2BAS7OPEN)')
      CALL USTOP(' ')
C
      END SUBROUTINE GWM1BAS2OPEN
C      
      END MODULE GWM1BAS2SUBS
C
C=======================================================================
C GWM REQUIRES IGETUNIT - THIS VERSION FROM MF2000 UTL6.F
C=======================================================================
      INTEGER FUNCTION IGETUNIT(IFIRST,MAXUNIT)
C     VERSION 19981030 ERB
C     ******************************************************************
C     FIND FIRST UNUSED FILE UNIT NUMBER BETWEEN IFIRST AND MAXUNIT
C     ******************************************************************
C        SPECIFICATIONS:
C     -----------------------------------------------------------------
      INTEGER I, IFIRST, IOST, MAXUNIT
      LOGICAL LOP
C     -----------------------------------------------------------------
C
      LOP = .TRUE.
C
C     LOOP THROUGH RANGE PROVIDED TO FIND FIRST UNUSED UNIT NUMBER
      DO 10 I=IFIRST,MAXUNIT
        INQUIRE(UNIT=I,IOSTAT=IOST,OPENED=LOP,ERR=5)
        IF (IOST.EQ.0) THEN
          IF (.NOT.LOP) THEN
            IGETUNIT = I
            RETURN
          ENDIF
        ENDIF
 5      CONTINUE
10    CONTINUE
C
C     IF THERE ARE NO UNUSED UNIT NUMBERS IN RANGE PROVIDED, RETURN
C     A VALUE INDICATING AN ERROR
      IGETUNIT = -1
C
      RETURN
      END
